<?php
// $Id$
/**
 * @file citygroups_splash.module
 * Displays a block of configuration links in a Colorbox popup.
 */

/**
 * Implementation of hook_menu().
 */
function citygroups_splash_menu() { 
  $items['splash/%citygroups_splash_block'] = array(
    'title' => '',
    'page callback' => 'citygroups_splash_block_display',
    'page arguments' => array(1),
    'access callback' => TRUE, 
  );

  $items['admin/content/demo-toggle'] = array(
    'title' => t('Toggle demo content'),
    'page callback' => 'citygroups_splash_toggle_demo_content',
    'access arguments' => array('administer site configuration'), 
  );

  return $items;
}


/**
 * Implementation of hook_init().
 */
function citygroups_splash_init() {
  // Admin splash screen.
/*
  if (drupal_is_front_page() 
      && user_access('administer site configuration')
      && !variable_get('citygroups_splash_welcome_seen', FALSE)) {
    
    $url = url('splash/site_welcome');
      
    $js = 'jQuery(document).ready(function () { jQuery.colorbox({ ';
    $js .= 'href: "' . $url . '",';
    $js .= 'width: 600,';
    $js .= 'height: 400,';
    $js .= 'opacity: .6,';
    $js .= '});});';
    drupal_add_js(drupal_get_path('module', 'citygroups_splash') . '/citygroups_splash.js');
    drupal_add_js($js, 'inline');
    
    // This makes it so that the splash page will never show up again, unless
    // this variable is set back to FALSE.
    variable_set('citygroups_splash_welcome_seen', TRUE);
  }
*/
  
  if(drupal_is_front_page() 
      && !user_access('administer site configuration')
      && !isset($_COOKIE['prealpha_seen'])
      && !user_is_logged_in() 
      ){

    setcookie('prealpha_seen', "seen", time + 3600 * 24 * 180);
  
    $url = url('splash/site_prealpha');
        
    $js = 'jQuery(document).ready(function () { jQuery.colorbox({ ';
    $js .= 'href: "' . $url . '",';
    $js .= 'width: 600,';
    $js .= 'height: 400,';
    $js .= 'opacity: .6,';
    $js .= '});});';
    
    drupal_add_js(drupal_get_path('module', 'citygroups_splash') . '/citygroups_splash.js');
    drupal_add_js($js, array('type' => 'inline', 'group' => JS_THEME, 'every_page' => TRUE)); 
  }
  
  
  $mod_uri = drupal_get_path('module', 'citygroups_splash');
  drupal_add_css( $mod_uri . '/citygroups_splash.css');

}

/**
 * Implementation of hook_block_info().
 */
function citygroups_splash_block_info() {
  $blocks['site_welcome'] = array(
    'info' => t('Welcome message splash screen'),
  );
  $blocks['site_config'] = array(
    'info' => t('Welcome message splash screen'),
    'status' => TRUE,
    'region' => 'dashboard_main', // Not usually provided. 
    'visibility' => 1, // Not usually provided. 
  );
  $blocks['site_prealpha'] = array(
    'info' => t('PreAlpha Site'),
    'status' => TRUE,
    'region' => 'dashboard_main', // Not usually provided. 
    'visibility' => 1, // Not usually provided. 
  );
  return $blocks;
}


/**
 * Implementation of hook_block_view().
 */
function citygroups_splash_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'site_welcome':
      $block['subject'] = t('Welcome to CityGroups');
      $block['content'] = citygroups_splash_block_site_welcome();
      break;
    case 'site_config':
      $block['subject'] = t('Get Started');
      $block['content'] = citygroups_splash_block_site_config();
      break;
    case 'site_prealpha':
      $block['subject'] = t('This site is Pre-Alpha');
      $block['content'] = citygroups_splash_block_site_prealpha();
      break;
  }
  return $block;
}

/**
 * Loader function for hook_menu().
 */
function citygroups_splash_block_load($delta) {
  return block_load('citygroups_splash', $delta);
}

/**
 * Helper function to assemble the initial site configuration block.
 */
function citygroups_splash_block_site_prealpha() {

  $output .= '<p>' . t('This is a brand new site, and as such, may have some bugs.') . '</p>';
  $output .= '<p>' . t('We are inviting folks to test the site and add information to it. If you have any questions or thoughts, please ');
  $output .= l('Contact Us', 'contact') . '</p>';
  
  $output .= '<p class="sign-in-link">' . l('Sign in', 'user') . ' to use all the features.</p>';
  $output .= '<p class="sign-in-link">' . l('Sign in with Facebook', 'fbconnect/register/prompt') . '.</p>';  

  // $output .= l('Sign in with Facebook', 'fbconnect') . '</p>';
  
  $block = array(
    '#markup' => $output,
  );
  return $block;

}
/**
 * Helper function to assemble the initial site configuration block.
 */
function citygroups_splash_block_site_welcome() {
  $markup = '';
  $markup .= '<p>' . t('Ready to create a Drupal site?') . '</p>';
  $markup .= '<p>' . t('To get started with your site, go straight to the !dashboard. From there, you\'ll be able to choose your theme, personalize your site, and configure all the bells and whistles.', array('!dashboard' => l(t('Dashboard'), 'admin/dashboard', array('attributes' => array('class' => array('citygroups-splash-link')))))) . '</p>';
  $markup .= '<p>' . t('Tell us what you think, or better yet, !contribute to make it even better.', array('!contribute' => l(t('contribute to CityGroups'), 'http://citygroups.org/'))) . '</p>';

  $block = array(
    '#markup' => $markup,
  );
  return $block;
}

/**
 * Helper function to assemble the initial site configuration block.
 */
function citygroups_splash_block_site_config() {
  $items = array();

  $markup = '';

  $items[] = array (
    'title' => 'Upload CSV of Community Groups',
    'href' => 'node/add/community-group-feed-upload-csv',
    'localized_options' => array('attributes' => array('class' => array('opic-dashboard-content'))),    
    'description' => t('Add properly formatted CSV files to bulk upload groups into the system.'),
  );
  
  $items[] = array (
    'title' => 'Add One Group',
    'href' => 'node/add/community-group',
    'localized_options' => array('attributes' => array('class' => array('opic-dashboard-content'))),    
    'description' => t('Add a Community Group'),
  );
  
  $items[] = array (
    'title' => 'Data Standard for Community Groups',
    'href' => 'data-standard-community-groups',
    'localized_options' => array('attributes' => array('class' => array('opic-dashboard-content'))),    
    'description' => t('Find out how to format your CSV file.'),
  );

  $items[] = array (
    'title' => 'Manage Categories',
    'href' => 'admin/structure/taxonomy/categories/list',
    'localized_options' => array('attributes' => array('class' => array('opic-dashboard-content'))),    
    'description' => t('Once you\'ve imported groups, you can adjust the categories.'),
  );
  
  $items[] = array (
    'title' => 'Export all Groups as CSV',
    'href' => 'data/community-group/csv',
    'localized_options' => array('attributes' => array('class' => array('opic-dashboard-content'))),    
    'description' => t('Get a CSV file of all your groups.'),
  );  
    
  $items[] = array (
    'title' => 'Manage Groups',
    'href' => 'list/manage',
    'localized_options' => array('attributes' => array('class' => array('opic-dashboard-site-settings'))),        
    'description' => t('See recently added groups.'),
  );

  $items[] = array (
    'title' => 'Personalize Site Settings',
    'href' => 'admin/config/system/site-information',
    'localized_options' => array('attributes' => array('class' => array('opic-dashboard-site-settings'))),        
    'description' => t('Change the title, slogan, contact information, and default frontpage settings here.'),
  );

  $items[] = array (
    'title' => 'Manage Users',
    'href' => 'admin/people/people',
    'localized_options' => array('attributes' => array('class' => array('opic-dashboard-roles'))),            
    'description' => t('Set up accounts for your users, contributors, and site administrators.'),
  );
  
  $content = array ('content' => $items);
  $markup = theme('admin_block_content', $content);

  $block = array(
    '#markup' => $markup,
  );
  return $block;
}


/**
 * Implementation of hook_block_display().
 */
function citygroups_splash_block_display($block) {
  $GLOBALS['devel_shutdown'] = FALSE; // Prevent devel module from spewing.
  
  $renderable_block = _block_get_renderable_array(_block_render_blocks(array($block)));
  print render($renderable_block);

  exit;
}

/**
 * Helper function to determine if all the tasks related to initial site configuration
 * have either been completed or dismissed.
 * TODO: Create a checklist of completed/dismissed tasks.
 * TODO: Check that list here.
 */
function citygroups_splash_site_welcome_check() {
  return TRUE;
}

/**
 * Menu callback function to help toggle the demo content module's status.
 */
function citygroups_splash_toggle_demo_content() {
  drupal_goto('admin/dashboard');
}

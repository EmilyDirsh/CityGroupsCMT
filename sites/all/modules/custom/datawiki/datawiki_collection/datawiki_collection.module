<?php

/**
 * @file
 * Custom module that renders and caches a json+leaflet map.
 */

/**
 * Implements hook_help().
 */
function datawiki_collection_help($path, $arg) {
  switch ($path) {
    case 'datawiki_collection':
      $explanation = t(
        'Custom features for Data Wiki Group Map.');
      return "<p>$explanation</p>";
  }
}

/**
 * Implementatation of hook_menu().
 */
/*
function datawiki_collection_menu() {
  $items['collection'] = array(
    'title' => 'Collections',
    'description' => 'Data Collection Projects',
    'page callback' => '_datawiki_collection_render',
    'page arguments' => array(t('<a href="!link">visit a similar page with no menu link</a>', array('!link' => url('menu_example/path_only')))),
    'access callback' => TRUE,
    'expanded' => TRUE,
  );
  $items['collection/termname'] = array(
    'title' => 'Collection: Termname',
    'description' => 'Data Collection Projects',
    'page callback' => '_datawiki_collection_term_render',
    'page arguments' => array(t('<a href="!link">visit a similar page with no menu link</a>', array('!link' => url('menu_example/path_only')))),
    'access callback' => TRUE,
    'expanded' => TRUE,
  );
  $items['map/collection/termname'] = array(
    'title' => 'Map',
    'description' => 'Data Collection Projects',
    'page callback' => '_datawiki_map_render',
    'page arguments' => array(t('<a href="!link">visit a similar page with no menu link</a>', array('!link' => url('menu_example/path_only')))),
    'access callback' => TRUE,
    'expanded' => TRUE,
  );
  $items['categories/collection/termname'] = array(
    'title' => 'List of categories',
    'description' => 'Categories',
    'page callback' => '_datawiki_categories_render',
    'page arguments' => array(t('<a href="!link">visit a similar page with no menu link</a>', array('!link' => url('menu_example/path_only')))),
    'access callback' => TRUE,
    'expanded' => TRUE,
  );
  $items['list/collection/termname'] = array(
    'title' => 'List',
    'description' => 'List of content',
    'page callback' => '_datawiki_list_render',
    'page arguments' => array(t('<a href="!link">visit a similar page with no menu link</a>', array('!link' => url('menu_example/path_only')))),
    'access callback' => TRUE,
    'expanded' => TRUE,
  );
  $items['about/collection/termname'] = array(
    'title' => 'About',
    'description' => 'About block',
    'page callback' => '_datawiki_about_render',
    'page arguments' => array(t('<a href="!link">visit a similar page with no menu link</a>', array('!link' => url('menu_example/path_only')))),
    'access callback' => TRUE,
    'expanded' => TRUE,
  );
  // @TODO add wrapper function that will autogenerate for for other content types.
  $items['node/add/community-group/collection/termname'] = array(
    'title' => 'Add new Termname',
    'description' => 'Add a community group',
    'page callback' => '_datawiki_add_community_group_render',
    'page arguments' => array(t('<a href="!link">visit a similar page with no menu link</a>', array('!link' => url('menu_example/path_only')))),
    'access callback' => TRUE,
    'expanded' => TRUE,
  );
  return $items;
}
*/

/**
 * Render menu page.
 */
function _datawiki_collection_render() {
 echo "collection";
}

/**
 * Render menu page.
 */
function _datawiki_collection_term_render() {
 echo "collections";
}

/**
 * Render menu page.
 */
function _datawiki_map_render() {
 echo "map";
}

/**
 * Render menu page.
 */
function _datawiki_categories_render() {
 echo "categories";
}

/**
 * Render menu page.
 */
function _datawiki_list_render() {
 echo "list";
}

/**
 * Render menu page.
 */
function _datawiki_about_render() {
 echo "about";
}


/**
 * Implements hook_block_info().
 */
function datawiki_collection_block_info() {
  $blocks['datawiki_welcome'] = array(
    'info' => t('Welcome Message'),
    'cache' => DRUPAL_CACHE_PER_ROLE, // default
  );
  $blocks['datawiki_branding_header'] = array(
    'info' => t('Branding Header'),
    'cache' => DRUPAL_CACHE_PER_ROLE, // default
  );
  $blocks['datawiki_branding_footer'] = array(
    'info' => t('Branding Footer'),
    'cache' => DRUPAL_CACHE_PER_ROLE, // default
  );
  $blocks['datawiki_facebook_like'] = array(
    'info' => t('Facebook Like'),
    'cache' => DRUPAL_CACHE_PER_ROLE, // default
  );
  $blocks['datawiki_add_data'] = array(
    'info' => t('Add Data'),
    'cache' => DRUPAL_CACHE_PER_ROLE, // default
  );
  $blocks['datawiki_new_group_search'] = array(
    'info' => t('New Group Search'),
    'cache' => DRUPAL_CACHE_PER_ROLE, // default
  );
  $blocks['datawiki_site_tagline'] = array(
    'info' => t('Site Tagline'),
    'cache' => DRUPAL_CACHE_PER_ROLE, // default
  );
  $blocks['datawiki_map'] = array(
    'info' => t('Map'),
    'cache' => DRUPAL_CACHE_PER_ROLE, // default
  );
  $blocks['datawiki_categories'] = array(
    'info' => t('Categories'),
    'cache' => DRUPAL_CACHE_PER_ROLE, // default
  );
  $blocks['datawiki_list'] = array(
    'info' => t('Categories'),
    'cache' => DRUPAL_CACHE_PER_ROLE, // default
  );
  $blocks['datawiki_home_menu'] = array(
    'info' => t('Home Menu'),
    'cache' => DRUPAL_CACHE_PER_ROLE, // default
  );
  $blocks['datawiki_categories_menu'] = array(
    'info' => t('Categories Menu'),
    'cache' => DRUPAL_CACHE_PER_ROLE, // default
  );
  $blocks['datawiki_map_menu'] = array(
    'info' => t('Map Menu'),
    'cache' => DRUPAL_CACHE_PER_ROLE, // default
  );
  $blocks['datawiki_map_menu'] = array(
    'info' => t('List Menu'),
    'cache' => DRUPAL_CACHE_PER_ROLE, // default
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function datawiki_collection_block_view($delta = '') {
  switch ($delta) {
    case 'datawiki_welcome':
      $block['subject'] = '';
      $block['content'] = datawiki_collection_contents('welcome');
      break;
      
    case 'datawiki_branding_header':
      $block['subject'] = '';
      $block['content'] = datawiki_collection_contents('branding_header');
      break;
      
    case 'datawiki_branding_footer':
      $block['subject'] = '';
      $block['content'] = datawiki_collection_contents('branding_footer');
      break;     
      
    case 'datawiki_facebook_like':
      $url = ($_SERVER['SERVER_PORT'] == '443') ? 'https' : 'http';
      $url .= '://';
      $url .= ($_SERVER['HTTP_HOST'] == 'localhost') ? 'localhost.com' : $_SERVER['HTTP_HOST'];
      $url .= $_SERVER['REQUEST_URI'];
      $block['subject'] = '';
      $block['content'] = '<script src="http://connect.facebook.net/en_US/all.js#xfbml=1"></script><fb:like href="' . urlencode($url) . '" send="true" width="200" show_faces="false" font=""></fb:like>';
      break;

    case 'datawiki_new_group_search':
      $block['subject'] = '';
      $block['content'] = datawiki_collection_contents('new_group_search');
      break;

    case 'datawiki_add_data':
      $block['subject'] = '';
      $block['content'] = datawiki_collection_contents('add_data');
      break;

    case 'datawiki_site_tagline':
      $block['subject'] = '';
      $block['content'] = datawiki_collection_contents('site_tagline');
      break;
      
    case 'datawiki_map':
      $block['subject'] = '';
      $block['content'] = datawiki_collection_contents('map');
      break;
    
    case 'datawiki_categories':
      $block['subject'] = '';
      $block['content'] = datawiki_collection_contents('categories');
      break;
    
    case 'datawiki_list':
      $block['subject'] = '';
      $block['content'] = datawiki_collection_contents('list');
      break;
      
    case 'datawiki_home_menu':
      $block['subject'] = '';
      $block['content'] = datawiki_collection_contents('home_menu');
      break;
      
    case 'datawiki_map_menu':
      $block['subject'] = '';
      $block['content'] = datawiki_collection_contents('map_menu');
      break;
    
    case 'datawiki_categories_menu':
      $block['subject'] = '';
      $block['content'] = datawiki_collection_contents('categories_menu');
      break;
      
    case 'datawiki_list_menu':
      $block['subject'] = '';
      $block['content'] = datawiki_collection_contents('list_menu');
      break; 
  }
  return $block;
}

/**
 * Block placeholder content
 */
function datawiki_collection_contents($type) {
  $output = '';
  
  switch ($type) {
    case 'welcome':
      $output .= '<h2>' . t('Find groups by location or topic.') . '</h2>';
      break;

    case 'site_tagline':
      $output .= '<h2>' . t('A public directory of over 300 community groups in the Seattle area.') . '</h2>';
      break;
      
    case 'branding_header':
      $output .= '<div id="branding-header"></div>';
      break;
      
    case 'branding_footer':
      $code_for_america = '';
      $output .= '<div id="branding-footer alpha omega grid_16">' 
      . '<div class="about grid_6">' 
      . t('Maintained by the City and Community Groups.') . '<br />'
      . t('Created as Open Source by <a href="http://codeforamerica.org">Code for America</a>') 
      . '<div class="tagline">' .  t('"For a more transparent, efficient and participatory future."') . '</div>' . '</div>'
      . '<div class="logo grid_10"><a href="http://codeforamerica.org">' . '<img src="' . base_path() . path_to_theme() . '/images/cfa-full-logo.png" width="150" />' . '</a></div>'
      . '</div>';
      break;

    case 'new_group_search':
  global $base_url;
      $output .= '<div id="new-group-search">' 
        . '<div class="form-submit">'
        . l('New Search', $base_url)
        . '</div>'
        . '</div>';
      break;
      
    case 'add_data':

      $facebook = '<img src="' . base_path() . path_to_theme() . '/images/groups_icons/icon_bw_facebook.png" title="Facebook" alt="Facebook" />';
      $yahoo = '<img src="' . base_path() . path_to_theme() . '/images/groups_icons/icon_bw_yahoo_groups.png" title="Yahoo Groups" alt="Yahoo Groups" />';
      $google = '<img src="' . base_path() . path_to_theme() . '/images/groups_icons/icon_bw_google_groups.png" title="Google Groups" alt="Google Groups" />';
      $meetup = '<img src="' . base_path() . path_to_theme() . '/images/groups_icons/icon_bw_meetup.png" title="Meetup Groups" alt="Meetup Groups" />';
      $mailinglist = '<img src="' . base_path() . path_to_theme() . '/images/groups_icons/icon_bw_email.png" title="Email" alt="Email" />';
      $twitter = '<img src="' . base_path() . path_to_theme() . '/images/groups_icons/icon_bw_twitter.png" title="Twitter" alt="Twitter" />';
      $blog = '<img src="' . base_path() . path_to_theme() . '/images/groups_icons/icon_bw_blogs.png" title="Community Blogs" alt="Community Blogs" />';
      $mail = '<img src="' . base_path() . path_to_theme() . '/images/groups_icons/icon_bw_mail.png" title="Personal Email" alt="Personal Email" />';
/*       $ning = '<img src="' . base_path() . path_to_theme() . '/images/cfa-full-logo.png" />'; */

      $links = $facebook . $google . $meetup . $mailinglist . $twitter . $blog . $yahoo . $mail /*. $ning */;
      $output .= '
        <div class="add-data">' .
        '<h3>' . t('We make it easy to find and share all kinds of groups in your city.') . '</h3>'
        . '<div class="groups-icons">' . $links . '</div>'
/*           . t('Know a cool group? Why not <a href="/node/add/online-community">Add</a> it?') */
        . '</div>';
      break;
      
      case 'map':
        $output .= "map block";
      break;
      
      case 'categories':
        $output .= "categories block";
      break;
      
      case 'list':
        $output .= "list block";
      break;
      
      case 'home_menu':
        $output .= '<div id="search-links">';
        $output .= '<div id="search-places" class="form-input">' . t('Search Places');
        $output .= '<input placeholder="Enter address, zipcode or neighborhood name" />';
        $output .= '</div>';
        $output .= '<div id="search-topics  class="form-input">' . t('Search Topics');
        $output .= '<input placeholder="Enter topic." />';
        $output .= '</div>';
        $output .= '</div>';
        $output .= '<div id="map-links">';
        $output .= '<ul>';
        $output .= '<li><a href="map/collection/termname">' . t('Map') . '</a></li>';
        $output .= '<li><a href="list/collection/termname">' . t('View as List') . '</a></li>';
        $output .= '<li><a href="categories/collection/termname">' . t('All Topics') . '</a></li>';
        $output .= '</ul>';
        $output .= '</div>';                
      break;
      
      case 'map_menu':
        $output .= "map menu block";
      break;
      
      case 'list_menu':
        $output .= "list menu block";
      break;
      
      case 'categories_menu':
        $output .= "categories menu block";
      break;
  }
  
  return $output;
}

function datawiki_collection_json_paths() {

  // Build and set JSON paths for javascript.
}

function datawiki_collection_set_theme() {
  // set the theme to datawiki_collection
}